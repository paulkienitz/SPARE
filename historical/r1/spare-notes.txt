Note that SPARE was originally designed to support requests of HTML content *only*.  If you're retrieving other data formats, it might work, but no promises.

This is a list of all of the error conditions that can occur in SPARE.replaceElement.

--------------
First come immediate errors that occur before a download is attempted.

        invoked when there's no AJAX support:
immediate exception "SPARE cannot operate; supportLevel is 0"

        [SPARE 1 only] invoked with third parameter (newElementID) given, when there's no support for extracting a downloaded page element:
immediate exception "SPARE cannot operate; supportLevel is 1"

        first parameter (elementID) missing, or cannot be found as an ID in your current document:
immediate exception "SPARE could not find target element '(elementID)'"

        second parameter (pageURL) is missing or not a string:
immediate exception "SPARE - pageURL is required"

--------------
Next come asynchronous errors.  If the onFailure function parameter is not given, the fallback behavior is to attempt to navigate to pageURL.

        the download from your URL is not successful
onFailure called with the status code and text returned by the web server or browser, e.g. 404 and "Not Found"

        the download takes longer than the number of seconds given by the timeout parameter:
onFailure called with code 408 and message "SPARE time limit exceeded" (note - server timeouts are 408 and "Request Timeout")

        after download, an unexpected exception occurs:
onFailure called with code -3 and message "SPARE caught exception (exception class name): (exception text)"

        [SPARE 1 only] after download, the downloaded content cannot be loaded into the DOM, perhaps because it is not HTML
onFailure called with code -2 and message "SPARE could not interpret the content of (pageURL) as HTML"

        after successful download, an element identified by newElementID cannot be found in the downloaded document:
onFailure called with code -1 and message "SPARE could not find element '(newElementID)' in downloaded content"
